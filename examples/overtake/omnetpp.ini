[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 6

network = Overtake

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

sim-time-limit = 360 s

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "vtypeauto=org.car2x.plexe.PlatoonCar vtypehuman=0"
*.manager.moduleName = "vtypeauto=node vtypehuman=0"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25
*.manager.order = -1

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.mac1609_4.useAcks = true
*.**.nic.mac1609_4.ackErrorRate = 0.0
*.**.nic.mac1609_4.frameErrorRate = 0.0

*.**.nic.phy80211p.minPowerLevel = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895
*.shockwave[*].mobility.x = 0
*.shockwave[*].mobility.y = 0
*.shockwave[*].mobility.z = 1.895


##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].prot.rng-0 = 2
*.node[*].appl.rng-0 = 3
*.node[*].scenario.rng-0 = 4

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/overtake.sumo.cfg"
*.manager.launchConfig = xmldoc("./sumocfg/overtake.launchd.xml")

##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "PositionHelper"

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.caccC1 = 0.5
*.node[*].scenario.caccXi = 1
*.node[*].scenario.caccOmegaN = 0.2 Hz
*.node[*].scenario.caccSpacing = 5 m
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegH = 0.5 s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = false
#via wireless send acceleration computed by the controller, not the actual one
#*.node[*].scenario.useControllerAcceleration = true
#*.node[*].scenario.nLanes = 2
#*.node[*].scenario.targetController = "CACC"

#headway for ACCs (when used as followers)
*.node[*].scenario.accHeadway = 0.1 s
*.node[*].scenario.leaderHeadway = ${leaderHeadway = 1.2} s

#average leader speed
*.node[*].scenario.leaderSpeed = ${leaderSpeed = 50} kmph

##########################################################
#                      Application                       #
##########################################################

*.node[*].appl_type = "GeneralPlatooningApp"
#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true
#use the join at back implementation of the join maneuver
*.node[*].appl.joinManeuver = "JoinAtBack"
*.node[*].appl.mergeManeuver = "MergeAtBack"
*.node[*].appl.intersectionMergeManeuver = "IntersectionMergeManeuver"

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "SimplePlatooningBeaconing"
#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = 0.1 s
#access category for platooning beacons
*.node[*].prot.priority = 4
#packet size for platooning beacon
*.node[*].prot.packetSize = 200
#via wireless send acceleration computed by the controller, not the actual one
*.node[*].prot.useControllerAcceleration = true

##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "OvertakeTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 0.1 s
#insert platooning vehicles with a speed of
**.traffic.platoonInsertSpeed = ${leaderSpeed}kmph
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "vtypeauto"
#controllers to be tested
**.numericController = ${controller = 0}
#insert vehicles already at steady-state. distance depends on controller
**.traffic.platoonInsertDistance = ${5 ! controller}m
**.traffic.platoonInsertHeadway = ${0 ! controller}s
**.traffic.platoonLeaderHeadway = ${leaderHeadway}s

**.traffic.platoonSizeA = 2
**.traffic.platoonSizeB = 2
**.traffic.platoonSizeC = 0
**.traffic.initialPositionDeltaA = 300
**.traffic.initialPositionDeltaB = 100
**.traffic.initialPositionDeltaC = 0 
**.traffic.controller = ${"CACC", "PLOEG" ! controller}

#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false

[Config Overtake]

*.manager.command = "sumo-gui"

#use the base scenario
*.node[*].scenario_type = "OvertakeScenario"

output-vector-file = ${resultdir}/${configname}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${repetition}.sca
